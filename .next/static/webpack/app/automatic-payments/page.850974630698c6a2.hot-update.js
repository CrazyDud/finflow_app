"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/automatic-payments/page",{

/***/ "(app-pages-browser)/./lib/storage.ts":
/*!************************!*\
  !*** ./lib/storage.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CATEGORIES: function() { return /* binding */ DEFAULT_CATEGORIES; },\n/* harmony export */   DEFAULT_SETTINGS: function() { return /* binding */ DEFAULT_SETTINGS; },\n/* harmony export */   SUPPORTED_CURRENCIES: function() { return /* binding */ SUPPORTED_CURRENCIES; },\n/* harmony export */   financeStorage: function() { return /* binding */ financeStorage; }\n/* harmony export */ });\nconst STORAGE_KEY = \"finance_tracker_data\";\nconst RATES_KEY = \"currency_rates\";\nconst RATES_TIMESTAMP_KEY = \"rates_timestamp\";\n// Default expense categories\nconst DEFAULT_CATEGORIES = [\n    {\n        id: \"1\",\n        name: \"Groceries\",\n        icon: \"ShoppingCart\",\n        color: \"#22C55E\",\n        limit: 400,\n        currency: \"EUR\"\n    },\n    {\n        id: \"2\",\n        name: \"Transportation\",\n        icon: \"Car\",\n        color: \"#3B82F6\",\n        limit: 150,\n        currency: \"EUR\"\n    },\n    {\n        id: \"3\",\n        name: \"Utilities\",\n        icon: \"Zap\",\n        color: \"#F59E0B\",\n        limit: 120,\n        currency: \"EUR\"\n    },\n    {\n        id: \"4\",\n        name: \"Entertainment\",\n        icon: \"Film\",\n        color: \"#EF4444\",\n        limit: 200,\n        currency: \"EUR\"\n    },\n    {\n        id: \"5\",\n        name: \"Dining Out\",\n        icon: \"UtensilsCrossed\",\n        color: \"#8B5CF6\",\n        limit: 180,\n        currency: \"EUR\"\n    },\n    {\n        id: \"6\",\n        name: \"Shopping\",\n        icon: \"ShoppingBag\",\n        color: \"#EC4899\",\n        limit: 150,\n        currency: \"EUR\"\n    },\n    {\n        id: \"7\",\n        name: \"Healthcare\",\n        icon: \"Heart\",\n        color: \"#10B981\",\n        limit: 100,\n        currency: \"EUR\"\n    },\n    {\n        id: \"8\",\n        name: \"Education\",\n        icon: \"BookOpen\",\n        color: \"#06B6D4\",\n        limit: 80,\n        currency: \"EUR\"\n    },\n    {\n        id: \"9\",\n        name: \"Savings & Investments\",\n        icon: \"TrendingUp\",\n        color: \"#84CC16\",\n        limit: 500,\n        currency: \"EUR\"\n    },\n    {\n        id: \"10\",\n        name: \"Subscriptions\",\n        icon: \"Repeat\",\n        color: \"#F97316\",\n        limit: 60,\n        currency: \"EUR\"\n    }\n];\n// Default settings\nconst DEFAULT_SETTINGS = {\n    defaultCurrency: \"EUR\",\n    mode: \"simple\",\n    budgetAllocation: {\n        essentials: 50,\n        investments: 20,\n        fun: 30\n    },\n    customAllocation: false,\n    notifications: true,\n    theme: \"system\",\n    language: \"en\"\n};\n// Supported currencies\nconst SUPPORTED_CURRENCIES = [\n    {\n        code: \"EUR\",\n        name: \"Euro\",\n        rate: 1,\n        symbol: \"â‚¬\"\n    },\n    {\n        code: \"USD\",\n        name: \"US Dollar\",\n        rate: 1.1,\n        symbol: \"$\"\n    },\n    {\n        code: \"GBP\",\n        name: \"British Pound\",\n        rate: 0.85,\n        symbol: \"\\xa3\"\n    },\n    {\n        code: \"JPY\",\n        name: \"Japanese Yen\",\n        rate: 130,\n        symbol: \"\\xa5\"\n    },\n    {\n        code: \"CAD\",\n        name: \"Canadian Dollar\",\n        rate: 1.45,\n        symbol: \"C$\"\n    },\n    {\n        code: \"AUD\",\n        name: \"Australian Dollar\",\n        rate: 1.65,\n        symbol: \"A$\"\n    },\n    {\n        code: \"CHF\",\n        name: \"Swiss Franc\",\n        rate: 0.95,\n        symbol: \"CHF\"\n    }\n];\nclass FinanceStorage {\n    // Initialize default data\n    getDefaultData() {\n        return {\n            income: [],\n            expenses: [],\n            categories: DEFAULT_CATEGORIES,\n            settings: DEFAULT_SETTINGS,\n            lastUpdated: new Date().toISOString()\n        };\n    }\n    // Load data from localStorage\n    loadData() {\n        if (false) {}\n        try {\n            const stored = localStorage.getItem(STORAGE_KEY);\n            if (stored) {\n                this.data = JSON.parse(stored);\n                // Ensure all required fields exist\n                this.data = {\n                    ...this.getDefaultData(),\n                    ...this.data,\n                    settings: {\n                        ...DEFAULT_SETTINGS,\n                        ...this.data?.settings\n                    }\n                };\n            } else {\n                this.data = this.getDefaultData();\n            }\n        } catch (error) {\n            console.error(\"Error loading finance data:\", error);\n            this.data = this.getDefaultData();\n        }\n        return this.data;\n    }\n    // Save data to localStorage\n    saveData(data) {\n        if (false) {}\n        try {\n            data.lastUpdated = new Date().toISOString();\n            this.data = data;\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n        } catch (error) {\n            console.error(\"Error saving finance data:\", error);\n        }\n    }\n    // Get current data\n    getData() {\n        if (!this.data) {\n            return this.loadData();\n        }\n        return this.data;\n    }\n    // Currency rates management\n    getCurrencyRates() {\n        if (false) {}\n        try {\n            const stored = localStorage.getItem(RATES_KEY);\n            const timestamp = localStorage.getItem(RATES_TIMESTAMP_KEY);\n            // Check if rates are older than 1 hour\n            if (stored && timestamp) {\n                const lastUpdate = parseInt(timestamp);\n                const oneHour = 60 * 60 * 1000;\n                if (Date.now() - lastUpdate < oneHour) {\n                    return JSON.parse(stored);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error loading currency rates:\", error);\n        }\n        return SUPPORTED_CURRENCIES;\n    }\n    // Save currency rates\n    saveCurrencyRates(rates) {\n        if (false) {}\n        try {\n            localStorage.setItem(RATES_KEY, JSON.stringify(rates));\n            localStorage.setItem(RATES_TIMESTAMP_KEY, Date.now().toString());\n        } catch (error) {\n            console.error(\"Error saving currency rates:\", error);\n        }\n    }\n    // Export data for backup\n    exportData() {\n        const data = this.getData();\n        return JSON.stringify(data, null, 2);\n    }\n    // Import data from backup\n    importData(jsonData) {\n        try {\n            const data = JSON.parse(jsonData);\n            // Basic validation\n            if (data && typeof data === \"object\" && Array.isArray(data.income) && Array.isArray(data.expenses)) {\n                this.saveData(data);\n                return true;\n            }\n        } catch (error) {\n            console.error(\"Error importing data:\", error);\n        }\n        return false;\n    }\n    // Clear all data\n    clearData() {\n        if (false) {}\n        localStorage.removeItem(STORAGE_KEY);\n        localStorage.removeItem(RATES_KEY);\n        localStorage.removeItem(RATES_TIMESTAMP_KEY);\n        this.data = null;\n    }\n    constructor(){\n        this.data = null;\n    }\n}\nconst financeStorage = new FinanceStorage();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/storage.ts\n"));

/***/ })

});